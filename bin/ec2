#!/usr/bin/env ruby

#Load in venor/gems
ROOT = "#{File.dirname(__FILE__)}/.."
Dir[File.join(ROOT, 'vendor', 'gems', '*')].each do |d|
      $:.unshift File.join(File.join(d, 'lib'))
end

require 'rubygems'
require 'AWS'


# Load in our config
#config_file = File.join ROOT, 'config', 'ec2.yml'
#if File.exists? config_file
#  begin
#    config = YAML::load_file config_file
#  rescue Exception => e
#    puts "Couldn't open config file #{config_file}: #{e.message}"
#  end
#else
#  puts "Config file #{config_file} doesn't exist"
#  exit
#end

ACCESS_KEY_ID = ENV['AMAZON_ACCESS_KEY_ID'] #|| config[:access_key_id]
SECRET_ACCESS_KEY = ENV['AMAZON_SECRET_ACCESS_KEY'] #|| config[:secret_access_key]
EC2_URL = ENV['EC2_URL'] #|| config[:ec2_url]

if ACCESS_KEY_ID.nil? || ACCESS_KEY_ID.empty? || SECRET_ACCESS_KEY.nil? || SECRET_ACCESS_KEY.empty?
  puts "Error : You must add the shell environment variables AMAZON_ACCESS_KEY_ID and AMAZON_SECRET_ACCESS_KEY before calling #{$0}!"
  exit
end

options = {
  :access_key_id => ACCESS_KEY_ID,
  :secret_access_key => SECRET_ACCESS_KEY,
}
option[:server] = URI.parse(EC2_URL).host if ENV['EC2_URL']

ec2 = AWS::EC2::Base.new options

script_file = File.join ROOT, 'config', 'setup_script.sh'
if File.exists? script_file
  user_data = IO.readlines(script_file).join

#  # Apply user data macros
#  details[:user_data_replace].each_pair do |regex, var|
#    user_data.gsub!(/#{regex}/, replace_data[var.to_sym])
#  end
end



options = {
#  :image_id => 'ami-5d59be34', #Hardy i386
#  :image_id => 'ami-5059be39', #Inrepid i386
#  :image_id => 'ami-fa658593', #Karmic alpha6
#  :image_id => 'ami-19a34270', # Alestic karmic
  :image_id => 'ami-52be5d3b', # Karmix daily i38
  :key_name => 'puppet',
  :group_id => 'default',
  :user_data => user_data,
  :base64_encoded => true,
}
result = ec2.run_instances(options)
puts result.inspect







